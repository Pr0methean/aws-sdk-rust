// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteAPIKey`](crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`scope(Scope)`](crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder::scope) / [`set_scope(Option<Scope>)`](crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder::set_scope):<br>required: **true**<br><p>Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AppSync GraphQL API, an Amazon Cognito user pool, an App Runner service, or an Amazon Web Services Verified Access instance.</p> <p>To work with CloudFront, you must also specify the Region US East (N. Virginia) as follows:</p> <ul>  <li>   <p>CLI - Specify the Region when you use the CloudFront scope: <code>--scope=CLOUDFRONT --region=us-east-1</code>.</p></li>  <li>   <p>API and SDKs - For all calls, use the Region endpoint us-east-1.</p></li> </ul><br>
    ///   - [`api_key(impl Into<String>)`](crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder::api_key) / [`set_api_key(Option<String>)`](crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder::set_api_key):<br>required: **true**<br><p>The encrypted API key that you want to delete.</p><br>
                            /// - On success, responds with [`DeleteApiKeyOutput`](crate::operation::delete_api_key::DeleteApiKeyOutput)
                            /// - On failure, responds with [`SdkError<DeleteAPIKeyError>`](crate::operation::delete_api_key::DeleteAPIKeyError)
    pub fn delete_api_key(&self) -> crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder {
                                crate::operation::delete_api_key::builders::DeleteAPIKeyFluentBuilder::new(self.handle.clone())
                            }
}

