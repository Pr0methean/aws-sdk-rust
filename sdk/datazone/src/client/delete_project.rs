// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteProject`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the Amazon DataZone domain in which the project is deleted.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder::set_identifier):<br>required: **true**<br><p>The identifier of the project that is to be deleted.</p><br>
    ///   - [`skip_deletion_check(bool)`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder::skip_deletion_check) / [`set_skip_deletion_check(Option<bool>)`](crate::operation::delete_project::builders::DeleteProjectFluentBuilder::set_skip_deletion_check):<br>required: **false**<br>Optional flag to asynchronously delete child entities within the project<br>
                            /// - On success, responds with [`DeleteProjectOutput`](crate::operation::delete_project::DeleteProjectOutput)
                            /// - On failure, responds with [`SdkError<DeleteProjectError>`](crate::operation::delete_project::DeleteProjectError)
    pub fn delete_project(&self) -> crate::operation::delete_project::builders::DeleteProjectFluentBuilder {
                                crate::operation::delete_project::builders::DeleteProjectFluentBuilder::new(self.handle.clone())
                            }
}

