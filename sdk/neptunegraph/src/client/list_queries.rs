// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListQueries`](crate::operation::list_queries::builders::ListQueriesFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`graph_identifier(impl Into<String>)`](crate::operation::list_queries::builders::ListQueriesFluentBuilder::graph_identifier) / [`set_graph_identifier(Option<String>)`](crate::operation::list_queries::builders::ListQueriesFluentBuilder::set_graph_identifier):<br>required: **true**<br><p>The unique identifier of the Neptune Analytics graph.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_queries::builders::ListQueriesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_queries::builders::ListQueriesFluentBuilder::set_max_results):<br>required: **true**<br><p>The maximum number of results to be fetched by the API.</p><br>
    ///   - [`state(QueryStateInput)`](crate::operation::list_queries::builders::ListQueriesFluentBuilder::state) / [`set_state(Option<QueryStateInput>)`](crate::operation::list_queries::builders::ListQueriesFluentBuilder::set_state):<br>required: **false**<br><p>Filtered list of queries based on state.</p><br>
                            /// - On success, responds with [`ListQueriesOutput`](crate::operation::list_queries::ListQueriesOutput) with field(s):
    ///   - [`queries(Vec::<QuerySummary>)`](crate::operation::list_queries::ListQueriesOutput::queries): <p>A list of current openCypher queries.</p>
                            /// - On failure, responds with [`SdkError<ListQueriesError>`](crate::operation::list_queries::ListQueriesError)
    pub fn list_queries(&self) -> crate::operation::list_queries::builders::ListQueriesFluentBuilder {
                                crate::operation::list_queries::builders::ListQueriesFluentBuilder::new(self.handle.clone())
                            }
}

