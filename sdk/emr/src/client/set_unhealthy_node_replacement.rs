// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetUnhealthyNodeReplacement`](crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`job_flow_ids(impl Into<String>)`](crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder::job_flow_ids) / [`set_job_flow_ids(Option<Vec::<String>>)`](crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder::set_job_flow_ids):<br>required: **true**<br><p>The list of strings that uniquely identify the clusters for which to turn on unhealthy node replacement. You can get these identifiers by running the <code>RunJobFlow</code> or the <code>DescribeJobFlows</code> operations.</p><br>
    ///   - [`unhealthy_node_replacement(bool)`](crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder::unhealthy_node_replacement) / [`set_unhealthy_node_replacement(Option<bool>)`](crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder::set_unhealthy_node_replacement):<br>required: **true**<br><p>Indicates whether to turn on or turn off graceful unhealthy node replacement.</p><br>
                            /// - On success, responds with [`SetUnhealthyNodeReplacementOutput`](crate::operation::set_unhealthy_node_replacement::SetUnhealthyNodeReplacementOutput)
                            /// - On failure, responds with [`SdkError<SetUnhealthyNodeReplacementError>`](crate::operation::set_unhealthy_node_replacement::SetUnhealthyNodeReplacementError)
    pub fn set_unhealthy_node_replacement(&self) -> crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder {
                                crate::operation::set_unhealthy_node_replacement::builders::SetUnhealthyNodeReplacementFluentBuilder::new(self.handle.clone())
                            }
}

