// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteWorkerConfiguration`](crate::operation::delete_worker_configuration::builders::DeleteWorkerConfigurationFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`worker_configuration_arn(impl Into<String>)`](crate::operation::delete_worker_configuration::builders::DeleteWorkerConfigurationFluentBuilder::worker_configuration_arn) / [`set_worker_configuration_arn(Option<String>)`](crate::operation::delete_worker_configuration::builders::DeleteWorkerConfigurationFluentBuilder::set_worker_configuration_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the worker configuration that you want to delete.</p><br>
                            /// - On success, responds with [`DeleteWorkerConfigurationOutput`](crate::operation::delete_worker_configuration::DeleteWorkerConfigurationOutput) with field(s):
    ///   - [`worker_configuration_arn(Option<String>)`](crate::operation::delete_worker_configuration::DeleteWorkerConfigurationOutput::worker_configuration_arn): <p>The Amazon Resource Name (ARN) of the worker configuration that you requested to delete.</p>
    ///   - [`worker_configuration_state(Option<WorkerConfigurationState>)`](crate::operation::delete_worker_configuration::DeleteWorkerConfigurationOutput::worker_configuration_state): <p>The state of the worker configuration.</p>
                            /// - On failure, responds with [`SdkError<DeleteWorkerConfigurationError>`](crate::operation::delete_worker_configuration::DeleteWorkerConfigurationError)
    pub fn delete_worker_configuration(&self) -> crate::operation::delete_worker_configuration::builders::DeleteWorkerConfigurationFluentBuilder {
                                crate::operation::delete_worker_configuration::builders::DeleteWorkerConfigurationFluentBuilder::new(self.handle.clone())
                            }
}

