// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn chime_webhook_configuration_correct_errors(mut builder: crate::types::builders::ChimeWebhookConfigurationBuilder) -> crate::types::builders::ChimeWebhookConfigurationBuilder {
                if builder.webhook_description.is_none() { builder.webhook_description = Some(Default::default()) }
if builder.chat_configuration_arn.is_none() { builder.chat_configuration_arn = Some(Default::default()) }
if builder.iam_role_arn.is_none() { builder.iam_role_arn = Some(Default::default()) }
if builder.sns_topic_arns.is_none() { builder.sns_topic_arns = Some(Default::default()) }
                builder
            }

pub(crate) fn slack_channel_configuration_correct_errors(mut builder: crate::types::builders::SlackChannelConfigurationBuilder) -> crate::types::builders::SlackChannelConfigurationBuilder {
                if builder.slack_team_name.is_none() { builder.slack_team_name = Some(Default::default()) }
if builder.slack_team_id.is_none() { builder.slack_team_id = Some(Default::default()) }
if builder.slack_channel_id.is_none() { builder.slack_channel_id = Some(Default::default()) }
if builder.slack_channel_name.is_none() { builder.slack_channel_name = Some(Default::default()) }
if builder.chat_configuration_arn.is_none() { builder.chat_configuration_arn = Some(Default::default()) }
if builder.iam_role_arn.is_none() { builder.iam_role_arn = Some(Default::default()) }
if builder.sns_topic_arns.is_none() { builder.sns_topic_arns = Some(Default::default()) }
                builder
            }

pub(crate) fn teams_channel_configuration_correct_errors(mut builder: crate::types::builders::TeamsChannelConfigurationBuilder) -> crate::types::builders::TeamsChannelConfigurationBuilder {
                if builder.channel_id.is_none() { builder.channel_id = Some(Default::default()) }
if builder.team_id.is_none() { builder.team_id = Some(Default::default()) }
if builder.tenant_id.is_none() { builder.tenant_id = Some(Default::default()) }
if builder.chat_configuration_arn.is_none() { builder.chat_configuration_arn = Some(Default::default()) }
if builder.iam_role_arn.is_none() { builder.iam_role_arn = Some(Default::default()) }
if builder.sns_topic_arns.is_none() { builder.sns_topic_arns = Some(Default::default()) }
                builder
            }

pub(crate) fn configured_team_correct_errors(mut builder: crate::types::builders::ConfiguredTeamBuilder) -> crate::types::builders::ConfiguredTeamBuilder {
                if builder.tenant_id.is_none() { builder.tenant_id = Some(Default::default()) }
if builder.team_id.is_none() { builder.team_id = Some(Default::default()) }
                builder
            }

pub(crate) fn slack_user_identity_correct_errors(mut builder: crate::types::builders::SlackUserIdentityBuilder) -> crate::types::builders::SlackUserIdentityBuilder {
                if builder.iam_role_arn.is_none() { builder.iam_role_arn = Some(Default::default()) }
if builder.chat_configuration_arn.is_none() { builder.chat_configuration_arn = Some(Default::default()) }
if builder.slack_team_id.is_none() { builder.slack_team_id = Some(Default::default()) }
if builder.slack_user_id.is_none() { builder.slack_user_id = Some(Default::default()) }
                builder
            }

pub(crate) fn slack_workspace_correct_errors(mut builder: crate::types::builders::SlackWorkspaceBuilder) -> crate::types::builders::SlackWorkspaceBuilder {
                if builder.slack_team_id.is_none() { builder.slack_team_id = Some(Default::default()) }
if builder.slack_team_name.is_none() { builder.slack_team_name = Some(Default::default()) }
                builder
            }

pub(crate) fn teams_user_identity_correct_errors(mut builder: crate::types::builders::TeamsUserIdentityBuilder) -> crate::types::builders::TeamsUserIdentityBuilder {
                if builder.iam_role_arn.is_none() { builder.iam_role_arn = Some(Default::default()) }
if builder.chat_configuration_arn.is_none() { builder.chat_configuration_arn = Some(Default::default()) }
if builder.team_id.is_none() { builder.team_id = Some(Default::default()) }
                builder
            }

