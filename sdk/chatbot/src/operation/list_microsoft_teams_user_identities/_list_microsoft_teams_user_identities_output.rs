// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListMicrosoftTeamsUserIdentitiesOutput  {
    /// User level permissions associated to a channel configuration.
    pub teams_user_identities: ::std::option::Option<::std::vec::Vec::<crate::types::TeamsUserIdentity>>,
    /// An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl  ListMicrosoftTeamsUserIdentitiesOutput  {
    /// User level permissions associated to a channel configuration.
    /// 
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.teams_user_identities.is_none()`.
    pub fn teams_user_identities(&self) -> & [crate::types::TeamsUserIdentity] {
        self.teams_user_identities.as_deref()
        .unwrap_or_default()
    }
    /// An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.
    pub fn next_token(&self) -> ::std::option::Option<& str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListMicrosoftTeamsUserIdentitiesOutput {
                                    fn request_id(&self) -> Option<&str> {
                                        self._request_id.as_deref()
                                    }
                                }
impl ListMicrosoftTeamsUserIdentitiesOutput {
    /// Creates a new builder-style object to manufacture [`ListMicrosoftTeamsUserIdentitiesOutput`](crate::operation::list_microsoft_teams_user_identities::ListMicrosoftTeamsUserIdentitiesOutput).
    pub fn builder() -> crate::operation::list_microsoft_teams_user_identities::builders::ListMicrosoftTeamsUserIdentitiesOutputBuilder {
        crate::operation::list_microsoft_teams_user_identities::builders::ListMicrosoftTeamsUserIdentitiesOutputBuilder::default()
    }
}

/// A builder for [`ListMicrosoftTeamsUserIdentitiesOutput`](crate::operation::list_microsoft_teams_user_identities::ListMicrosoftTeamsUserIdentitiesOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListMicrosoftTeamsUserIdentitiesOutputBuilder {
    pub(crate) teams_user_identities: ::std::option::Option<::std::vec::Vec::<crate::types::TeamsUserIdentity>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListMicrosoftTeamsUserIdentitiesOutputBuilder {
    /// Appends an item to `teams_user_identities`.
    ///
    /// To override the contents of this collection use [`set_teams_user_identities`](Self::set_teams_user_identities).
    ///
    /// User level permissions associated to a channel configuration.
    pub fn teams_user_identities(mut self, input: crate::types::TeamsUserIdentity) -> Self {
        let mut v = self.teams_user_identities.unwrap_or_default();
                        v.push(input);
                        self.teams_user_identities = ::std::option::Option::Some(v);
                        self
    }
    /// User level permissions associated to a channel configuration.
    pub fn set_teams_user_identities(mut self, input: ::std::option::Option<::std::vec::Vec::<crate::types::TeamsUserIdentity>>) -> Self {
        self.teams_user_identities = input; self
    }
    /// User level permissions associated to a channel configuration.
    pub fn get_teams_user_identities(&self) -> &::std::option::Option<::std::vec::Vec::<crate::types::TeamsUserIdentity>> {
        &self.teams_user_identities
    }
    /// An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input; self
    }
    /// An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
                                        self._request_id = Some(request_id.into());
                                        self
                                    }
    
                                    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
                                        self._request_id = request_id;
                                        self
                                    }
    /// Consumes the builder and constructs a [`ListMicrosoftTeamsUserIdentitiesOutput`](crate::operation::list_microsoft_teams_user_identities::ListMicrosoftTeamsUserIdentitiesOutput).
    pub fn build(self) -> crate::operation::list_microsoft_teams_user_identities::ListMicrosoftTeamsUserIdentitiesOutput {
        crate::operation::list_microsoft_teams_user_identities::ListMicrosoftTeamsUserIdentitiesOutput {
            teams_user_identities: self.teams_user_identities
            ,
            next_token: self.next_token
            ,
            _request_id: self._request_id,
        }
    }
}

