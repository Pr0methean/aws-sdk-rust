// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateAccountPreferencesOutput  {
    /// Preferences which apply for AWS Chatbot usage in the calling AWS account.
    pub account_preferences: ::std::option::Option<crate::types::AccountPreferences>,
    _request_id: Option<String>,
}
impl  UpdateAccountPreferencesOutput  {
    /// Preferences which apply for AWS Chatbot usage in the calling AWS account.
    pub fn account_preferences(&self) -> ::std::option::Option<& crate::types::AccountPreferences> {
        self.account_preferences.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for UpdateAccountPreferencesOutput {
                                    fn request_id(&self) -> Option<&str> {
                                        self._request_id.as_deref()
                                    }
                                }
impl UpdateAccountPreferencesOutput {
    /// Creates a new builder-style object to manufacture [`UpdateAccountPreferencesOutput`](crate::operation::update_account_preferences::UpdateAccountPreferencesOutput).
    pub fn builder() -> crate::operation::update_account_preferences::builders::UpdateAccountPreferencesOutputBuilder {
        crate::operation::update_account_preferences::builders::UpdateAccountPreferencesOutputBuilder::default()
    }
}

/// A builder for [`UpdateAccountPreferencesOutput`](crate::operation::update_account_preferences::UpdateAccountPreferencesOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateAccountPreferencesOutputBuilder {
    pub(crate) account_preferences: ::std::option::Option<crate::types::AccountPreferences>,
    _request_id: Option<String>,
}
impl UpdateAccountPreferencesOutputBuilder {
    /// Preferences which apply for AWS Chatbot usage in the calling AWS account.
    pub fn account_preferences(mut self, input: crate::types::AccountPreferences) -> Self {
        self.account_preferences = ::std::option::Option::Some(input);
        self
    }
    /// Preferences which apply for AWS Chatbot usage in the calling AWS account.
    pub fn set_account_preferences(mut self, input: ::std::option::Option<crate::types::AccountPreferences>) -> Self {
        self.account_preferences = input; self
    }
    /// Preferences which apply for AWS Chatbot usage in the calling AWS account.
    pub fn get_account_preferences(&self) -> &::std::option::Option<crate::types::AccountPreferences> {
        &self.account_preferences
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
                                        self._request_id = Some(request_id.into());
                                        self
                                    }
    
                                    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
                                        self._request_id = request_id;
                                        self
                                    }
    /// Consumes the builder and constructs a [`UpdateAccountPreferencesOutput`](crate::operation::update_account_preferences::UpdateAccountPreferencesOutput).
    pub fn build(self) -> crate::operation::update_account_preferences::UpdateAccountPreferencesOutput {
        crate::operation::update_account_preferences::UpdateAccountPreferencesOutput {
            account_preferences: self.account_preferences
            ,
            _request_id: self._request_id,
        }
    }
}

