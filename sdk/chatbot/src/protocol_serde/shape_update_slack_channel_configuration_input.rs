// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_slack_channel_configuration_input_input(
                         object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
                         input: &crate::operation::update_slack_channel_configuration::UpdateSlackChannelConfigurationInput,
                    ) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.chat_configuration_arn {
        object.key("ChatConfigurationArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.guardrail_policy_arns {
        let mut array_3 = object.key("GuardrailPolicyArns").start_array();
        for item_4 in var_2 {
             {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if let Some(var_5) = &input.iam_role_arn {
        object.key("IamRoleArn").string(var_5.as_str());
    }
    if let Some(var_6) = &input.logging_level {
        object.key("LoggingLevel").string(var_6.as_str());
    }
    if let Some(var_7) = &input.slack_channel_id {
        object.key("SlackChannelId").string(var_7.as_str());
    }
    if let Some(var_8) = &input.slack_channel_name {
        object.key("SlackChannelName").string(var_8.as_str());
    }
    if let Some(var_9) = &input.sns_topic_arns {
        let mut array_10 = object.key("SnsTopicArns").start_array();
        for item_11 in var_9 {
             {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    if let Some(var_12) = &input.user_authorization_required {
        object.key("UserAuthorizationRequired").boolean(*var_12);
    }
    Ok(())
}

