// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_delete_microsoft_teams_user_identity_http_error(_response_status: u16, _response_headers: &::aws_smithy_runtime_api::http::Headers, _response_body: &[u8]) -> std::result::Result<crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityOutput, crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body).map_err(crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::unhandled)?;
    generic_builder = ::aws_types::request_id::apply_request_id(generic_builder, _response_headers);
    let generic = generic_builder.build();
    let error_code = match generic.code() {
                                Some(code) => code,
                                None => return Err(crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::unhandled(generic))
                            };
    
                            let _error_message = generic.message().map(|msg|msg.to_owned());
    Err(match error_code {
        "DeleteMicrosoftTeamsUserIdentityException" => crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::DeleteMicrosoftTeamsUserIdentityException({
            #[allow(unused_mut)]
            let mut tmp =
                 {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::DeleteMicrosoftTeamsUserIdentityExceptionBuilder::default();
                    output = crate::protocol_serde::shape_delete_microsoft_teams_user_identity_exception::de_delete_microsoft_teams_user_identity_exception_json_err(_response_body, output).map_err(crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                }
            ;
            if tmp.message.is_none() {
                                                            tmp.message = _error_message;
                                                        }
            tmp
        }),
        "InvalidParameterException" => crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::InvalidParameterException({
            #[allow(unused_mut)]
            let mut tmp =
                 {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::InvalidParameterExceptionBuilder::default();
                    output = crate::protocol_serde::shape_invalid_parameter_exception::de_invalid_parameter_exception_json_err(_response_body, output).map_err(crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                }
            ;
            if tmp.message.is_none() {
                                                            tmp.message = _error_message;
                                                        }
            tmp
        }),
        "ResourceNotFoundException" => crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::ResourceNotFoundException({
            #[allow(unused_mut)]
            let mut tmp =
                 {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::ResourceNotFoundExceptionBuilder::default();
                    output = crate::protocol_serde::shape_resource_not_found_exception::de_resource_not_found_exception_json_err(_response_body, output).map_err(crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                }
            ;
            if tmp.message.is_none() {
                                                            tmp.message = _error_message;
                                                        }
            tmp
        }),
        _ => crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError::generic(generic)
    })
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_delete_microsoft_teams_user_identity_http_response(_response_status: u16, _response_headers: &::aws_smithy_runtime_api::http::Headers, _response_body: &[u8]) -> std::result::Result<crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityOutput, crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityError> {
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::delete_microsoft_teams_user_identity::builders::DeleteMicrosoftTeamsUserIdentityOutputBuilder::default();
        output._set_request_id(::aws_types::request_id::RequestId::request_id(_response_headers).map(str::to_string));
        output.build()
    })
}

pub fn ser_delete_microsoft_teams_user_identity_input(input: &crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityInput) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    let mut object = ::aws_smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::protocol_serde::shape_delete_microsoft_teams_user_identity_input::ser_delete_microsoft_teams_user_identity_input_input(&mut object, input)?;
    object.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}

