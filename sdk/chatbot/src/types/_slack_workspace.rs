// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A Slack Workspace.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SlackWorkspace  {
    /// The ID of the Slack workspace authorized with AWS Chatbot.
    pub slack_team_id: ::std::string::String,
    /// Name of the Slack Workspace.
    pub slack_team_name: ::std::string::String,
}
impl  SlackWorkspace  {
    /// The ID of the Slack workspace authorized with AWS Chatbot.
    pub fn slack_team_id(&self) -> & str {
        use std::ops::Deref; self.slack_team_id.deref()
    }
    /// Name of the Slack Workspace.
    pub fn slack_team_name(&self) -> & str {
        use std::ops::Deref; self.slack_team_name.deref()
    }
}
impl SlackWorkspace {
    /// Creates a new builder-style object to manufacture [`SlackWorkspace`](crate::types::SlackWorkspace).
    pub fn builder() -> crate::types::builders::SlackWorkspaceBuilder {
        crate::types::builders::SlackWorkspaceBuilder::default()
    }
}

/// A builder for [`SlackWorkspace`](crate::types::SlackWorkspace).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SlackWorkspaceBuilder {
    pub(crate) slack_team_id: ::std::option::Option<::std::string::String>,
    pub(crate) slack_team_name: ::std::option::Option<::std::string::String>,
}
impl SlackWorkspaceBuilder {
    /// The ID of the Slack workspace authorized with AWS Chatbot.
    /// This field is required.
    pub fn slack_team_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.slack_team_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the Slack workspace authorized with AWS Chatbot.
    pub fn set_slack_team_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.slack_team_id = input; self
    }
    /// The ID of the Slack workspace authorized with AWS Chatbot.
    pub fn get_slack_team_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.slack_team_id
    }
    /// Name of the Slack Workspace.
    /// This field is required.
    pub fn slack_team_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.slack_team_name = ::std::option::Option::Some(input.into());
        self
    }
    /// Name of the Slack Workspace.
    pub fn set_slack_team_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.slack_team_name = input; self
    }
    /// Name of the Slack Workspace.
    pub fn get_slack_team_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.slack_team_name
    }
    /// Consumes the builder and constructs a [`SlackWorkspace`](crate::types::SlackWorkspace).
    /// This method will fail if any of the following fields are not set:
    /// - [`slack_team_id`](crate::types::builders::SlackWorkspaceBuilder::slack_team_id)
    /// - [`slack_team_name`](crate::types::builders::SlackWorkspaceBuilder::slack_team_name)
    pub fn build(self) -> ::std::result::Result<crate::types::SlackWorkspace, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::types::SlackWorkspace {
                slack_team_id: self.slack_team_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("slack_team_id", "slack_team_id was not specified but it is required when building SlackWorkspace")
                    )?
                ,
                slack_team_name: self.slack_team_name
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("slack_team_name", "slack_team_name was not specified but it is required when building SlackWorkspace")
                    )?
                ,
            }
        )
    }
}

