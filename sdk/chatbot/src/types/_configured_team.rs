// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A Microsoft Teams team that has been authorized with AWS Chatbot.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConfiguredTeam  {
    /// The ID of the Microsoft Teams tenant.
    pub tenant_id: ::std::string::String,
    /// The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide.
    pub team_id: ::std::string::String,
    /// The name of the Microsoft Teams Team.
    pub team_name: ::std::option::Option<::std::string::String>,
}
impl  ConfiguredTeam  {
    /// The ID of the Microsoft Teams tenant.
    pub fn tenant_id(&self) -> & str {
        use std::ops::Deref; self.tenant_id.deref()
    }
    /// The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide.
    pub fn team_id(&self) -> & str {
        use std::ops::Deref; self.team_id.deref()
    }
    /// The name of the Microsoft Teams Team.
    pub fn team_name(&self) -> ::std::option::Option<& str> {
        self.team_name.as_deref()
    }
}
impl ConfiguredTeam {
    /// Creates a new builder-style object to manufacture [`ConfiguredTeam`](crate::types::ConfiguredTeam).
    pub fn builder() -> crate::types::builders::ConfiguredTeamBuilder {
        crate::types::builders::ConfiguredTeamBuilder::default()
    }
}

/// A builder for [`ConfiguredTeam`](crate::types::ConfiguredTeam).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConfiguredTeamBuilder {
    pub(crate) tenant_id: ::std::option::Option<::std::string::String>,
    pub(crate) team_id: ::std::option::Option<::std::string::String>,
    pub(crate) team_name: ::std::option::Option<::std::string::String>,
}
impl ConfiguredTeamBuilder {
    /// The ID of the Microsoft Teams tenant.
    /// This field is required.
    pub fn tenant_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the Microsoft Teams tenant.
    pub fn set_tenant_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_id = input; self
    }
    /// The ID of the Microsoft Teams tenant.
    pub fn get_tenant_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_id
    }
    /// The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide.
    /// This field is required.
    pub fn team_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.team_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide.
    pub fn set_team_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.team_id = input; self
    }
    /// The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide.
    pub fn get_team_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.team_id
    }
    /// The name of the Microsoft Teams Team.
    pub fn team_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.team_name = ::std::option::Option::Some(input.into());
        self
    }
    /// The name of the Microsoft Teams Team.
    pub fn set_team_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.team_name = input; self
    }
    /// The name of the Microsoft Teams Team.
    pub fn get_team_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.team_name
    }
    /// Consumes the builder and constructs a [`ConfiguredTeam`](crate::types::ConfiguredTeam).
    /// This method will fail if any of the following fields are not set:
    /// - [`tenant_id`](crate::types::builders::ConfiguredTeamBuilder::tenant_id)
    /// - [`team_id`](crate::types::builders::ConfiguredTeamBuilder::team_id)
    pub fn build(self) -> ::std::result::Result<crate::types::ConfiguredTeam, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::types::ConfiguredTeam {
                tenant_id: self.tenant_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("tenant_id", "tenant_id was not specified but it is required when building ConfiguredTeam")
                    )?
                ,
                team_id: self.team_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("team_id", "team_id was not specified but it is required when building ConfiguredTeam")
                    )?
                ,
                team_name: self.team_name
                ,
            }
        )
    }
}

