// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_recommendation(decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder) -> Result<crate::types::Recommendation, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::Recommendation::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Id") /* Id com.amazonaws.redshift#Recommendation$Id */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_id(var_1);
            }
            ,
            s if s.matches("ClusterIdentifier") /* ClusterIdentifier com.amazonaws.redshift#Recommendation$ClusterIdentifier */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_cluster_identifier(var_2);
            }
            ,
            s if s.matches("NamespaceArn") /* NamespaceArn com.amazonaws.redshift#Recommendation$NamespaceArn */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_namespace_arn(var_3);
            }
            ,
            s if s.matches("CreatedAt") /* CreatedAt com.amazonaws.redshift#Recommendation$CreatedAt */ =>  {
                let var_4 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.redshift#TStamp`)"))
                        ?
                    )
                ;
                builder = builder.set_created_at(var_4);
            }
            ,
            s if s.matches("RecommendationType") /* RecommendationType com.amazonaws.redshift#Recommendation$RecommendationType */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_recommendation_type(var_5);
            }
            ,
            s if s.matches("Title") /* Title com.amazonaws.redshift#Recommendation$Title */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_title(var_6);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.redshift#Recommendation$Description */ =>  {
                let var_7 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_7);
            }
            ,
            s if s.matches("Observation") /* Observation com.amazonaws.redshift#Recommendation$Observation */ =>  {
                let var_8 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_observation(var_8);
            }
            ,
            s if s.matches("ImpactRanking") /* ImpactRanking com.amazonaws.redshift#Recommendation$ImpactRanking */ =>  {
                let var_9 =
                    Some(
                        Result::<crate::types::ImpactRankingType, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ImpactRankingType::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_impact_ranking(var_9);
            }
            ,
            s if s.matches("RecommendationText") /* RecommendationText com.amazonaws.redshift#Recommendation$RecommendationText */ =>  {
                let var_10 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_recommendation_text(var_10);
            }
            ,
            s if s.matches("RecommendedActions") /* RecommendedActions com.amazonaws.redshift#Recommendation$RecommendedActions */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_recommended_action_list::de_recommended_action_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_recommended_actions(var_11);
            }
            ,
            s if s.matches("ReferenceLinks") /* ReferenceLinks com.amazonaws.redshift#Recommendation$ReferenceLinks */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_reference_link_list::de_reference_link_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_reference_links(var_12);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}

